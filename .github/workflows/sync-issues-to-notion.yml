name: Sync GitHub Issues to Notion

on:
  issues:
    types:
      - opened
      - edited
      - reopened
      - closed

jobs:
  sync_issues_to_notion:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Sync GitHub Issue to Notion
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: |
          import requests
          import json

          # GitHub and Notion configuration
          github_api_url = f'https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}'
          notion_api_url = 'https://api.notion.com/v1/pages'
          headers_github = {
              'Authorization': f'token {GITHUB_TOKEN}',
              'Accept': 'application/vnd.github.v3+json'
          }
          headers_notion = {
              'Authorization': f'Bearer {NOTION_TOKEN}',
              'Content-Type': 'application/json',
              'Notion-Version': '2021-08-16'
          }

          # Fetch GitHub Issue
          response = requests.get(github_api_url, headers=headers_github)
          if response.status_code != 200:
              print(f"Error fetching issue from GitHub: {response.status_code}")
              exit(1)

          issue = response.json()

          # Prepare Notion Page Data
          notion_data = {
              'parent': { 'database_id': NOTION_DATABASE_ID },
              'properties': {
                  'Title': {
                      'title': [
                          {
                              'text': {
                                  'content': issue['title']
                              }
                          }
                      ]
                  },
                  'Issue Number': {
                      'number': issue['number']
                  },
                  'Description': {
                      'rich_text': [
                          {
                              'text': {
                                  'content': issue['body'] if issue['body'] else 'No description'
                              }
                          }
                      ]
                  },
                  'Status': {
                      'select': {
                          'name': issue['state'].capitalize()  # Open or Closed
                      }
                  },
                  'Labels': {
                      'multi_select': [{'name': label['name']} for label in issue['labels']]
                  }
              }
          }

          # Send request to Notion API
          response = requests.post(notion_api_url, headers=headers_notion, data=json.dumps(notion_data))

          if response.status_code == 200:
              print(f"Successfully created/updated Notion page for issue #{issue['number']}")
          else:
              print(f"Error creating/updating Notion page: {response.status_code}")
              exit(1)
